type
  TokenType* = enum
    tkAccent = "`",
    tkAddr = "addr",
    tkAnd = "and",
    tkAs = "as",
    tkAsm = "asm",
    tkBind = "bind",
    tkBlock = "block",
    tkBracketDotLe = "[.",
    tkBracketDotRi = ".]",
    tkBracketLe = "[",
    tkBracketLeColon = "[:",
    tkBracketRi = "]",
    tkBreak = "break",
    tkCase = "case",
    tkCast = "cast",
    tkCharLit = "tkCharLit",
    tkColon = ":",
    tkColonColon = "::",
    tkComma = ",",
    tkComment,
    tkConcept = "concept",
    tkConst = "const",
    tkContinue = "continue",
    tkConverter = "converter",
    tkCurlyDotLe = "{.",
    tkCurlyDotRi = ".}",
    tkCurlyLe = "{",
    tkCurlyRi = "}",
    tkCustomLit = "tkCustomLit",
    tkDefer = "defer",
    tkDiscard = "discard",
    tkDistinct = "distinct",
    tkDiv = "div",
    tkDo = "do",
    tkDot = ".",
    tkDotDot = "..",
    tkElif = "elif",
    tkElse = "else",
    tkEnd = "end",
    tkEnum = "enum",
    tkEof = "[EOF]",
    tkEquals = "=",
    tkExcept = "except",
    tkExport = "export",
    tkFinally = "finally",
    tkFloat128Lit = "tkFloat128Lit",
    tkFloat32Lit = "tkFloat32Lit",
    tkFloat64Lit = "tkFloat64Lit",
    tkFloatLit = "tkFloatLit",
    tkFor = "for",
    tkFrom = "from",
    tkFunc = "func",
    tkGStrLit = "tkGStrLit",
    tkGTripleStrLit = "tkGTripleStrLit",
    tkHideableEnd
    tkHideableStart,
    tkIf = "if",
    tkImport = "import",
    tkIn = "in",
    tkInclude = "include",
    tkInfixOpr,
    tkInt16Lit = "tkInt16Lit",
    tkInt32Lit = "tkInt32Lit",
    tkInt64Lit = "tkInt64Lit",
    tkInt8Lit = "tkInt8Lit",
    tkIntLit = "tkIntLit",
    tkInterface = "interface",
    tkInvalid = "tkInvalid",
    tkIs = "is",
    tkIsnot = "isnot",
    tkIterator = "iterator",
    tkLet = "let",
    tkMacro = "macro",
    tkMethod = "method",
    tkMixin = "mixin",
    tkMod = "mod",
    tkNil = "nil",
    tkNot = "not",
    tkNotin = "notin",
    tkObject = "object",
    tkOf = "of",
    tkOpr,
    tkOr = "or",
    tkOut = "out",
    tkParDotLe = "(.",
    tkParDotRi = ".)",
    tkParLe = "(",
    tkParRi = ")",
    tkPostfixOpr,
    tkPrefixOpr,
    tkProc = "proc",
    tkPtr = "ptr",
    tkRStrLit = "tkRStrLit",
    tkRaise = "raise",
    tkRef = "ref",
    tkReturn = "return",
    tkSemiColon = ";",
    tkShl = "shl",
    tkShr = "shr",
    tkSpaces,
    tkStatic = "static",
    tkStrLit = "tkStrLit",
    tkSymbol = "tkSymbol",
    tkTemplate = "template",
    tkTripleStrLit = "tkTripleStrLit",
    tkTry = "try",
    tkTuple = "tuple",
    tkType = "type",
    tkUInt16Lit = "tkUInt16Lit",
    tkUInt32Lit = "tkUInt32Lit",
    tkUInt64Lit = "tkUInt64Lit",
    tkUInt8Lit = "tkUInt8Lit",
    tkUIntLit = "tkUIntLit",
    tkUsing = "using",
    tkVar = "var",
    tkWhen = "when",
    tkWhile = "while",
    tkXor = "xor",
    tkYield = "yield"

  ParsedFile* = tuple
    splitFileContent: seq[string]
    splitFileLine: seq[string]
    fileIndex: int
    line: string
